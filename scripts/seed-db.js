import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  try {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    const contact = await prisma.contact.create({
      data: {
        phone: '+7 (999) 123-45-67',
        email: 'info@altailands.ru',
        address: '–≥. –ë–∞—Ä–Ω–∞—É–ª, —É–ª. –õ–µ–Ω–∏–Ω–∞, 1',
        whatsapp: JSON.stringify({ enabled: true, username: '79991234567' }),
        telegram: JSON.stringify({ enabled: true, username: 'altailands' }),
        vk: JSON.stringify({ enabled: true, username: 'altailands' }),
        work_hours: JSON.stringify({
          monday_friday: '9:00 - 18:00',
          saturday_sunday: '10:00 - 16:00'
        })
      }
    })
    console.log('‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞')

    // –°–æ–∑–¥–∞–µ–º –∑–µ–º–µ–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏
    const landPlot1 = await prisma.landPlot.create({
      data: {
        title: '–£—á–∞—Å—Ç–æ–∫ —É –æ–∑–µ—Ä–∞',
        description: '–ñ–∏–≤–æ–ø–∏—Å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫ —Å –≤–∏–¥–æ–º –Ω–∞ –æ–∑–µ—Ä–æ. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –¥–æ–º–∞ –∏–ª–∏ –±–∞–∑—ã –æ—Ç–¥—ã—Ö–∞.',
        cadastralNumbers: ['22:61:051234:123'],
        area: 1500,
        price: 2500000,
        pricePerMeter: 1667,
        region: '–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π',
        location: '–ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —Å. –ë–µ—Ä–µ–∑–æ–≤–∫–∞',
        landCategory: '–°–•',
        permittedUse: ['–õ–ü–•', '–ò–ñ–°'],
        status: 'AVAILABLE',
        features: ['–í–∏–¥ –Ω–∞ –æ–∑–µ—Ä–æ', '–†–æ–≤–Ω—ã–π —É—á–∞—Å—Ç–æ–∫', '–ö—Ä—É–≥–ª–æ–≥–æ–¥–∏—á–Ω—ã–π –ø–æ–¥—ä–µ–∑–¥'],
        utilities: JSON.stringify({
          electricity: true,
          water: true,
          gas: false,
          sewage: false
        })
      }
    })

    const landPlot2 = await prisma.landPlot.create({
      data: {
        title: '–£—á–∞—Å—Ç–æ–∫ –≤ –≥–æ—Ä–∞—Ö',
        description: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫ –≤ –ø—Ä–µ–¥–≥–æ—Ä—å—è—Ö –ê–ª—Ç–∞—è. –ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤–∏–¥ –Ω–∞ –≥–æ—Ä—ã, —á–∏—Å—Ç—ã–π –≤–æ–∑–¥—É—Ö.',
        cadastralNumbers: ['22:61:051234:124'],
        area: 2000,
        price: 3500000,
        pricePerMeter: 1750,
        region: '–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π',
        location: '–ê–ª—Ç–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —Å. –ì–æ—Ä–Ω–æ–µ',
        landCategory: '–°–•',
        permittedUse: ['–õ–ü–•', '–°–• –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ'],
        status: 'AVAILABLE',
        features: ['–ì–æ—Ä–Ω—ã–π –≤–∏–¥', '–õ–µ—Å —Ä—è–¥–æ–º', '–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã–π —Ä–∞–π–æ–Ω'],
        utilities: JSON.stringify({
          electricity: true,
          water: false,
          gas: false,
          sewage: false
        })
      }
    })
    console.log('‚úÖ –ó–µ–º–µ–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏ —Å–æ–∑–¥–∞–Ω—ã')

    // –°–æ–∑–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –∫–≤–∏–∑–∞
    const questions = await prisma.quizQuestion.createMany({
      data: [
        {
          question: '–ö–∞–∫–æ–π —Ç–∏–ø —É—á–∞—Å—Ç–∫–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
          options: ['–î–ª—è –∂–∏–ª–∏—â–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞', '–î–ª—è —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞', '–î–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'],
          order: 1,
          isActive: true
        },
        {
          question: '–ö–∞–∫–∞—è –ø–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞?',
          options: ['–î–æ 10 —Å–æ—Ç–æ–∫', '10-20 —Å–æ—Ç–æ–∫', '–ë–æ–ª–µ–µ 20 —Å–æ—Ç–æ–∫'],
          order: 2,
          isActive: true
        },
        {
          question: '–ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ?',
          options: ['–î–æ 1 –º–ª–Ω', '1-3 –º–ª–Ω', '–ë–æ–ª–µ–µ 3 –º–ª–Ω'],
          order: 3,
          isActive: true
        }
      ]
    })
    console.log('‚úÖ –í–æ–ø—Ä–æ—Å—ã –¥–ª—è –∫–≤–∏–∑–∞ —Å–æ–∑–¥–∞–Ω—ã')

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞')
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

main() 